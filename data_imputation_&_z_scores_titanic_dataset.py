# -*- coding: utf-8 -*-
"""Data Imputation & Z-Scores Titanic Dataset

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/scratchpad/data-imputation-z-scores-titanic-dataset.b39f25f9-fd57-4703-9668-0c5fe2575b5c.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20250425/auto/storage/goog4_request%26X-Goog-Date%3D20250425T100402Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D67773a732215b556e01229c6b8fd20899d37630c3960af95c1966ba106ba7b285f9f59c2beea689e84534afd71f415e2b607b35a06e20650771199fbe3a3ae389d5e67de9be8363fd6f669a6f151cf7505f55b463d858af977c937f31c59d38d94d2e53beac22a4c88fd3ecb9829de7f40c298437ca577beaf6dcf0f8b3577bd0ba1fe04e0d12c2f17383c9a4d9c9d01fb48e53ae55f24c5b890dffaa0ae05a41ffd9d5e3b79d4627f6e6b3f2c30e2b9eac3bbfa7108d606627b81372ca6ceb4cb6aa0e6c457d860420b15240b3369e5ca3a3900b4047ea6795cd1324d2ac23ca51892bac836d4dad30c73177f05bcd7403daa1264e210fba432cea197975e5e
"""

import kagglehub
yasserh_titanic_dataset_path = kagglehub.dataset_download('yasserh/titanic-dataset')

print('Data source import complete.')

"""## **Import Library**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## **Dataset Info**"""

df = pd.read_csv('/kaggle/input/titanic-dataset/Titanic-Dataset.csv')
print(df.head())

df.info()

df.describe(include='all')

"""## **Data Imputation**"""

# Checking missing values on 'Age' and 'Fare'
missing_af = df[['Age', 'Fare']].isnull().sum()
print(missing_af)

# Checking missing values on dataset
missing_values = df.isnull().sum()
print(missing_values)

"""### **Visualization**"""

fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))
sns.histplot(df['Age'], bins=30, kde=True, ax=ax1, color='red')
sns.histplot(df['Fare'], bins=30, kde=True, ax=ax2, color='purple')
ax1.set_title('Age Distribution')
ax2.set_title('Fare Distribution')
plt.show()

"""### **Simple Data Imputation**

Select all of the categorical features
"""

categorical_features = df.select_dtypes(include=['object']).columns
print(categorical_features)

"""Encoding using LabelEncoder"""

from sklearn.preprocessing import LabelEncoder

encoder = LabelEncoder()
df_train = df.copy()
encoders = {}

for col in categorical_features:
    if df[col].isnull().sum() > 0:
        df_train[col] = df[col].fillna('Missing')

    encoders[col] = LabelEncoder()
    df_train[col] = encoders[col].fit_transform(df_train[col])

print(df_train.isnull().sum())
print(df_train.head())

print(df_train.info())

"""### **Using SimpleImputer**"""

# Data Imputation using SimpleImputer
from sklearn.impute import SimpleImputer

# Create copies for different imputation strategies
df_train_mean = df_train.copy()
df_train_median = df_train.copy()
df_train_mode = df_train.copy()

numerical_features = df_train.select_dtypes(include=['int64', 'float64', 'int32']).columns

mean_imputer = SimpleImputer(strategy='mean')
df_train_mean[numerical_features] = mean_imputer.fit_transform(df_train_mean[numerical_features])

median_imputer = SimpleImputer(strategy='median')
df_train_median[numerical_features] = median_imputer.fit_transform(df_train_median[numerical_features])

mode_imputer = SimpleImputer(strategy='most_frequent')
df_train_mode[numerical_features] = mode_imputer.fit_transform(df_train_mode[numerical_features])

print("After mean imputation:")
print(df_train_mean[numerical_features].isnull().sum())

"""## **Compute the z-score**"""

age_zscore = (df_train_mean['Age'] - df_train_mean['Age'].mean()) / df_train_mean['Age'].std()

age_zscore.describe()

outliers_df = df[abs(age_zscore) > 3]

print(outliers_df)

plt.figure(figsize=(10, 6))
sns.boxplot(x='Age', data=df_train_mean)
plt.title('Age Distribution')
plt.show()

import scipy.stats as stats

z_20 = (20 - df_train_mean['Age'].mean()) / df_train_mean['Age'].std()
probabilities_20 = stats.norm.cdf(z_20)

print(f"Probability of Age < 20: {probabilities_20}")